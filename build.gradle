plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.14,6.2)'
}

version = '48.0.19.0'
group = 'libs.luckytntlib'
archivesBaseName = 'luckytntlib-1.20.2'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.20.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'luckytntlib'

            mods {
                luckytntlib {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'luckytntlib'

            mods {
                luckytntlib {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'luckytntlib'

            mods {
                luckytntlib {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'luckytntlib', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                luckytntlib {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

}

dependencies {

    minecraft 'net.minecraftforge:forge:1.20.2-48.0.19'

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "luckytntlib",
                "Specification-Vendor"    : "luckytntlibsareus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "luckytntlibsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task sourceJar(type: Jar) {
	archiveClassifier = 'sources'
    from sourceSets.main.allJava
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

jar.finalizedBy("reobfJar")
build.dependsOn("sourceJar")

publishing {
    publications {
        maven(MavenPublication) {
            artifact jar
            artifact tasks.sourceJar
        }
    }
    repositories {
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}